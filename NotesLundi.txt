
    Grails framework :

    - HTML 

            PROB :
        ergonomie performance tactile resolutions réseau ..etc 
            SOLUTIONS :
        chaque techno est adapté à son usage 
        scalabitlité migration maturité capacité à recruter 
        temps et budget (une techno qui n a pas + d un an = beaaad mzl) il faut au moins 2 ans pour faire cette migration pour une visibilté de long terme 
        la migration des bd c est tres risqué (boulangerie : noo oracle -- grande société : noo mysql )
        et la techno doit etre un peu utilisé pour avoir des ingenieurs qui vont s occuper de la maintenance apres 

            footer : infos coropate (sur e/se)

            SEO - il y a des scores
        web : critique de referencement (bcp de h1 || h3 sans h2 || h1 trop longue max 100) vous degrader votre site 
              les temps de reponse (e-commerce 0,5 ms max)
              

              application/x-ww ... pour envoyer ss forme d une methode get 
              multipart/formdata : pr envoyer un file

              types block (div h1 h6 p ol ul li table forme ) retour a la ligne avant et apres / tte la largeur du parent / pas d hauteur 
              inline (span / img / input / a) change pas de la taille / pas de saut de ligne 
    - CSS3 

    attribut style="" à eviter c'est une mauvaise pratique : style inline 
    ajout <style> dans le head de la page : c pas bien aussi 
    fichier à part (c mieux bzfff)

    faire en selbke que le haut de la ligne se charge plus vite (pr avoir un score nadi)
    c est demande par fois pour mettre le css au sein de l html (ça depond du besoin / pour garantir la rapidité ) on rapatrit uniquement le css au dessus de la ligne
    l animation vc css c la tendance 

            framework ça augmente la taille du file : c pas bien --> les librairies ne doivent pas paiser plus que le site 
            jquery : framework js 
            on peut faire un requete ajax avec js
        media queries : definir contraintes de resolution 
        flexible layout : 
        grid layout :

        , ou logique 
        h1 + p le p qui est apres h1 
        h1 span le span a l interieur d un h1 
        a[titre]

        content + padding = block 

            @media : and only , 
            screen  pc
            print : paginable
            exp @media screen and (min-width:900px){
            }
            and (orientation:portrait) : on vise quelque chose de tactile 

            la tranche d age par exemple (profile) vous permet de savoir quelle peripherique elles utilisent 


        FLEXIBLE LAYOUT : pour centrer un carré 

        1 et 2 svv //avec du js c diff

        display :flex pour le container 
        items => flex-wrap:nowrap // pr ne pas depasser 
        .item{
            flex-grow : ; //par def 0 et la drti 2 kiban kbr mn 1
            flex-shrink : ; //par def 1
            felx-basis: 10em; //fixer la taille 
        // selui avec la taille fixe va etre reservé au depard }
        .container {
            justify-contetnt :flex-start | flex-end | center | space-between | space-around | space-evenly // column
            alugn-items : stretch ...
            align-content : si le parent kbr mn items
        }
        
        Grid Layout :
        avant tables -> div float -> grid layout 

        nomination grid-area nta hooor 
        




        








